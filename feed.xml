<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ru"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://denisnovikov.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://denisnovikov.github.io/" rel="alternate" type="text/html" hreflang="ru" /><updated>2017-12-15T08:51:12+03:00</updated><id>https://denisnovikov.github.io/</id><title type="html">denisnovikov.github.io</title><subtitle>Хранилище разнообразной информации</subtitle><entry><title type="html">Черные методы продвижения сайтов. Что не стоит делать, если хотите вывести сайт в ТОП</title><link href="https://denisnovikov.github.io/blog/black-website-promotion-how-not-to-do/" rel="alternate" type="text/html" title="Черные методы продвижения сайтов. Что не стоит делать, если хотите вывести сайт в ТОП" /><published>2017-10-30T21:15:00+03:00</published><updated>2017-10-30T21:15:00+03:00</updated><id>https://denisnovikov.github.io/blog/black-website-promotion-how-not-to-do</id><content type="html" xml:base="https://denisnovikov.github.io/blog/black-website-promotion-how-not-to-do/">&lt;p&gt;Задача владельцев сайтов — поднять свой ресурс на самое высокое место в поисковой выдаче. Они готовы сделать все, чтобы увидеть свой проект в ТОПе: кто-то применяет белые методы продвижения сайта, а кто-то не прочь воспользоваться и черным продвижением, лишь бы его детище было на вершине.&lt;/p&gt;

&lt;p&gt;Поисковые системы уже давно научились распознавать недобросовестные манипуляции, разрабатывая новые алгоритмы. Они стараются избавиться от сайтов, которые продвигаются нечестным путем, и отдают предпочтение только качественным и грамотно оптимизированным ресурсам.&lt;/p&gt;

&lt;h2 id=&quot;Черные-методы-раскрутки-которые-мыНЕ-рекомендуем&quot;&gt;Черные методы раскрутки, которые мы НЕ рекомендуем&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Спам.&lt;/strong&gt; Не пытайтесь упоминать о своем ресурсе везде, особенно там, где это не уместно. Информация о вашем сайте на форумах, в блогах, на досках объявлений, в рассылках должна быть по делу. Не стоит, например, размещать рекламу о сайте с кальянами на форуме молодых мам.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Обмен и покупка ссылок.&lt;/strong&gt; Начиная с 2013 года, Яндекс стал активно бороться с некачественными ссылками. Многие владельцы сайтов с большим количеством входящих ссылок столкнулись с Минусинском. Не занимайтесь покупкой ссылок, все ссылки должны быть с хороших ресурсов, тематически подходящих вашему. Помните, что для ссылочной массы сейчас важно не количество, а их качество.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Дорвеи и клоакинг.&lt;/strong&gt; Дорвей — сайт, созданный для перенаправления пользователя на продвигаемый ресурс. Для перенаправления используется redirect. Содержимое таких страниц состоит из бессвязных предложений с огромным количеством ключевых запросов. Такие сайты захламляют просторы Интернета и жестоко караются поисковыми системами.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Размещение невидимого или плохо заметного текста.&lt;/strong&gt; Размещение такого текста грозит получением фильтра от Яндекса, поисковики страницы со скрытым текстом исключают из поиска.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Накрутка поведенческих факторов.&lt;/strong&gt; Когда-то можно было повлиять на выдачу за счет накрутки ПФ, но сейчас поисковики умеют определять, был ли применен данный инструмент и все ли показатели естественные. Не заказывайте накрутку поведенческих факторов у посредников, ни к чему хорошему это не приведет.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Переспам текста ключевыми запросами.&lt;/strong&gt; Все чаще владельцы сайтов сталкиваются с фильтром Баден-Баден, борющимся с текстовым спамом. Лайфхак от копирайтеров: на 300–500 символов рекомендуется использовать 1 ключевой запрос.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Много ссылок и кнопок на главной странице.&lt;/strong&gt; Допустимо, если в этом есть реальная необходимость.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Flash-анимация.&lt;/strong&gt; Такие сайты продвигать очень трудно. Найти их в ТОПе практически невозможно, но исключения бывают. Старайтесь не строить свой ресурс полностью на flash-элементах.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Каждый владелец веб-сайта должен поставить перед собой задачу не просто раскрутить свой проект, а сделать его интересным и удобным для пользователей. Сайты создаются в первую очередь для людей, а поисковые системы всячески способствуют тому, чтобы ресурсы развивались и были качественными.&lt;/p&gt;

&lt;h2 id=&quot;Несколько-советов-как-продвигать-сайт&quot;&gt;Несколько советов, как продвигать сайт&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Уделите внимание дизайну вашего сайта и удобству для посетителей.&lt;/strong&gt; Дизайн должен быть приятным, без ярких режущих глаз цветов. Делайте цветовую гамму размеренной, сочетайте шрифты. Создайте удобное меню, чтобы человек не ломал голову, где и что искать ему на сайте.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Грамотно оптимизируйте контент&lt;/strong&gt; (составьте семантическое ядро, оптимизируйте под него тексты, метатеги и пр.).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Настройте все технические параметры&lt;/strong&gt; (правильно подберите URL (лучше если ЧПУ будут с включением ключевых запросов), настройте файлы sitemap.xml и robots.txt для правильной индексации сайта, настройте редиректы для зеркал сайта, исключите все дубли, настройте разметку контактов и карточек товаров и т. д.).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Добавьте сайт в Вебмастера&lt;/strong&gt; Яндекса, Гугла, также нелишним будет добавление в Майле и Бинге.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Займитесь узнаваемостью сайта (компании) в сети.&lt;/strong&gt; Добавьте информацию о сайте на самые популярные площадки Интернета (Яндекс и Гугл Карты, справочники организаций (2ГИС, Фламп, Желтые страницы и др.)).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Займитесь наращиванием ссылочной массы,&lt;/strong&gt; но помните, что выше мы говорили о покупных и обменных ссылках. Еще один лайфхак: ссылки можно получать с помощью крауд-маркетинга, но делать это нужно правильно.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Разработайте мобильную версию сайта.&lt;/strong&gt; Пользователей из мобильных источников становится все больше и больше, сделайте свой ресурс удобным для просмотра на смартфонах и планшетах.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Используйте SMM-продвижение.&lt;/strong&gt; Продвижение в социальных сетях очень актуально в наше время. Большая ошибка — пренебрегать созданием групп в соцсетях и их продвижением.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Всегда помните о своем проекте.&lt;/strong&gt; Не забывайте вовремя оплачивать хостинг и домен. Если робот или пользователь зайдут на неработающий сайт из-за несвоевременной оплаты, это скажется только отрицательно. Также всегда старайтесь обновлять контент, особенно это важно для новостных ресурсов. Если на сайте есть новости, обновляйте их хотя бы раз в месяц, чтобы пользователь видел, что над ресурсом работают.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Данные рекомендации общие, каждый сайт имеет свою направленность. Сайт интернет-магазина и портал продвигаются разными способами, и план раскрутки для каждого будет свой.&lt;/p&gt;</content><author><name>1ps.ru</name></author><category term="other" /><summary type="html">Задача владельцев сайтов — поднять свой ресурс на самое высокое место в поисковой выдаче. Они готовы сделать все, чтобы увидеть свой проект в ТОПе: кто-то применяет белые методы продвижения сайта, а кто-то не прочь воспользоваться и черным продвижением, лишь бы его детище было на вершине.</summary></entry><entry><title type="html">Параллельное выполнение ssh команд на серверах</title><link href="https://denisnovikov.github.io/blog/parallel-execution-of-ssh-commands-on-servers/" rel="alternate" type="text/html" title="Параллельное выполнение ssh команд на серверах" /><published>2017-08-22T17:28:39+03:00</published><updated>2017-08-22T17:28:39+03:00</updated><id>https://denisnovikov.github.io/blog/parallel-execution-of-ssh-commands-on-servers</id><content type="html" xml:base="https://denisnovikov.github.io/blog/parallel-execution-of-ssh-commands-on-servers/">&lt;p&gt;При управлении большим количеством серверов часто приходится выполнять одну и ту же команду сразу на нескольких серверах (десятках/сотнях/тысячах).&lt;/p&gt;

&lt;p&gt;Существует немало инструментов для решения этой задачи. В .io мы применяем простое решение pssh.&lt;/p&gt;

&lt;p&gt;На Ubuntu этот инструмент доступен в пакетах:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install pssh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Перед использованием инструмента необходимо подготовить текстовые файлы с адресами серверов в формате:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;10.10.0.1&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;10.10.0.2&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;10.10.0.3&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Список IP серверов для выполнения команд с помощью pssh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Мы активно используем микросервисную архитектуру, поэтому у нас есть десятки сервисов. Поэтому мы создали общий файл со списком всех серверов и по файлу для каждого сервиса:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;all.txt&lt;/code&gt; хранит список всех серверов системы. Используется крайне редко;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;serviceX.txt&lt;/code&gt; хранит список всех серверов конкретного сервиса.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Для выполнения команды на всех серверах:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;parallel-ssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; all.txt &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /tmp/ssh &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Выполнит команду “ls -la” на всех серверах из файл all.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Результат команды будет записан в папку &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/ssh&lt;/code&gt; — в отдельный файл для каждого сервера:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ls -la /tmp/ssh/&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;     1 root     root      1238 Aug 22 16:46 10.10.0.1&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;     1 root     root      1269 Aug 22 16:46 10.10.0.2&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;     1 root     root      1110 Aug 22 16:46 10.10.0.3&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;     1 root     root       950 Aug 22 16:46 10.10.0.4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Для использовании авторизации по ключам:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;parallel-ssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; all.txt &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-i key.rsa&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /tmp/ssh &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;key.rsa будет использовать для доступа ко всем серверам&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Вы можете вручную задать количество потоков для выполнения команд:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;parallel-ssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; all.txt &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 10 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /tmp/ssh &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;команды будут выполняться в 10 потоков&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Используйте &lt;a href=&quot;https://github.com/robinbowes/pssh&quot;&gt;pssh&lt;/a&gt; для выполнения команд на большом количестве серверов:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;parallel-ssh &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; all.txt &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /tmp/ssh &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;В all.txt нужно добавить список серверов, каждый ip адрес на новой строке&lt;/em&gt;&lt;/p&gt;</content><author><name>ruhighload.com</name></author><category term="linux" /><summary type="html">При управлении большим количеством серверов часто приходится выполнять одну и ту же команду сразу на нескольких серверах (десятках/сотнях/тысячах).</summary></entry><entry><title type="html">Oh My Zsh!</title><link href="https://denisnovikov.github.io/blog/oh-my-zsh/" rel="alternate" type="text/html" title="Oh My Zsh!" /><published>2017-06-19T14:36:00+03:00</published><updated>2017-06-19T14:36:00+03:00</updated><id>https://denisnovikov.github.io/blog/oh-my-zsh</id><content type="html" xml:base="https://denisnovikov.github.io/blog/oh-my-zsh/">&lt;p&gt;Хочу поделиться очень отличным шелом, а по большей части, фреймворком созданным для него, который превратит вашу консоль в очень информативный и продуктивный инструмент.&lt;/p&gt;

&lt;p&gt;Данный материал пригодет только для пользователей unix-подобных систем, а именно Linux и MacOS. На MacOS не знаю что да как, но судя по всему установка и настройка совершенно не отличаются друг от друга. Соответственно его можно ставить и на веб-сервера.&lt;/p&gt;

&lt;h2 id=&quot;Что-это-и-зачем-оно&quot;&gt;Что это и зачем оно&lt;/h2&gt;

&lt;p&gt;Немного введу в курс дела, чтобы вы понимали что это такое и что оно даст. Во-первых, потребуется установить новую оболочку для терминала Zsh и переключиться на неё (кто не в курсе, они живут рядом с друг-другом и не затирают аналоги, так что можно всегда вернуться обратно, например на bash в ubuntu, + можно каждому юзеру выбирать свою, так что это совершенно безопасно). Во-вторых, мы поставим фреймворк для Zsh, который позволяет писать различные плагины, темы и т.д. для данной оболочки, что, собственно, и делает её такой удобой, так как люди написали кучу годноты.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-01.png&quot;&gt;&lt;img src=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-01.png&quot; alt=&quot;Пример с GitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Я не могу вам описать всех возможностей, ибо некоторые из них не так заметны и не сразу бросаются в глаза. Например, при указании пути до файла\папки Tab в Zsh, делает то же самое что и в bash, но куда круче, а я заметил это спустя неделю, так как не обращал внимания. Он мало того что может учитывать регистры папок и поправлять вас, так и список папок также можно визуально перебирать табом, что просто очень удобно и ускоряет работу.&lt;/p&gt;

&lt;p&gt;Я вообще изначально ставил данный шелл и фреймворк только ради Git плагина, который показывает (если вы находитесь в папках с репозиторием), актуально ли текущее состояние репозитория, в какой ветке находимся, имеются ли новые изменения в файлах, есть ли коммиты или изменения. В общем всю необходимую информацию. Не нужно проверять ветку через &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -v&lt;/code&gt;, проверять есть ли изменения через &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; и т.д.&lt;/p&gt;

&lt;p&gt;У него есть куча интеграций с различными программами и системными утилитами, которые позволяют сделать работу с терминалом намного, намного приятнее. Ведь, особенно, с Drupal 8, работать с ним нужно все чаще и больше.&lt;/p&gt;

&lt;h2 id=&quot;Установка-zsh-и-oh-my-zsh&quot;&gt;Установка Zsh и Oh My Zsh&lt;/h2&gt;

&lt;p&gt;Первым делом нужно установить оболочку Zsh, для этого в Ubuntu необходимо просто запросить данный пакет, так как он находится в официальных репозиториях:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install zsh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Далее нам необходимо поставить фреймворк &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt;. Разработчики предлагают два варианта установки, по сути они одинаковые, вам просто предоставляется выбор как вытянуть скрипт установщика, &lt;code class=&quot;highlighter-rouge&quot;&gt;wget&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;, это лишь важно в тех случаях, когда на системе нет одного из них (частенько можно встретить отсутствие curl), и вы не хотите ставить пакет ради этого, или нет прав. Я также пишу вам два варианта, а какой использовать решайте сами:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# curl&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# wget&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;После данной установки, у вас запросят пароль чтобы переключить шел для текущего пользователя на Zsh. Вводим, и всё готово!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-02.png&quot;&gt;&lt;img src=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-02.png&quot; alt=&quot;Oh My Zsh после установки&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Из коробки он хоть уже и дает больше информации, как по мне, он выглядит хуже оригинального. Для этого в OMZ есть поддержка тем и плагинов, которые могут в корне менять оболочку.&lt;/p&gt;

&lt;h2 id=&quot;Где-и-что-находится&quot;&gt;Где и что находится&lt;/h2&gt;

&lt;p&gt;Данный раздел я не мог упустить так как он может очень сильно помочь в дальнейшем. Фреймворк Oh My Zsh находится в папке ~/.oh-my-zsh — там, в свою очередь, находятся все файлы фреймворка. А сама папка ничто иное как репозиторий Oh My Zsh. Но удалять папку просто так не стоит, там для этого есть специальный скрипт, ниже напишу как.&lt;/p&gt;

&lt;p&gt;Все настройки для Oh My Zsh находятся в файле ~/.zshrc. О нем подробнее будет ниже.&lt;/p&gt;

&lt;h2 id=&quot;Установка-плагинов&quot;&gt;Установка плагинов&lt;/h2&gt;

&lt;p&gt;Начнем с установки нужных нам плагинов. Из коробки там стоит только git, больше никакие плагины не активированы. Список всех додступных плагинов поставляемых с фреймворком можно посмотреть на &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins&quot;&gt;странице wiki&lt;/a&gt;, с описанием для чего они используются.&lt;/p&gt;

&lt;p&gt;Например я хочу поставить себе следующие плагины:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;npm&lt;/strong&gt; — добавлят поддержку автодополнения к команде npm&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;vagrant&lt;/strong&gt; — так как я часто пользуюсь vagrant из-за Drupal VM, то мне он тоже не помешает. Также как и npm добавляет поддержку автодополнения. Там же есть и &lt;strong&gt;docker&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;composer&lt;/strong&gt; — в 8-ке очень активно использую composer, а данный плагин опять же, добавляет автодополнение, и помимо этого различные полезные синонимы команд. Например &lt;code class=&quot;highlighter-rouge&quot;&gt;cu&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;composer update&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;sudo&lt;/strong&gt; — частенько бывает и такое, что вбиваешь или копируешь команду из интернета, но для неё требуются права супер-пользователя. Постоянно переводить курсор и дописывать муторно, а данный плагин позволяет просто нажать два раза &lt;code class=&quot;highlighter-rouge&quot;&gt;Esc&lt;/code&gt;, и он сам добавит sudo в начало команды;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;web-search&lt;/strong&gt; — а иногда случается ситуация, что роешься в консоли и забыл какую-то команду, нужно гуглануть, и чтобы не переключаться на браузер, не кликать на строку поиска, данный плагин позволяет написать &lt;code class=&quot;highlighter-rouge&quot;&gt;google drupal 8 composer&lt;/code&gt;, и в браузере по умолчанию сразу откроются результаты.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Там куча других плагинов, можно писать свои, выбирайте на свой вкус и под свои задачи, я продолжу гайд как поставить указаныне выше плагины (остальные ставятся абсолютно также).&lt;/p&gt;

&lt;p&gt;Для того чтобы включить данные плагины (они уже есть в комплекте), достаточно отредактировать файл &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt;. Для этого, в ubuntu, достаточно написать &lt;code class=&quot;highlighter-rouge&quot;&gt;nano ~/.zshrc&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;vi ~/.zshrc&lt;/code&gt;, что вам удобнее. Открываем данный файл на редактирование и ищем строку &lt;code class=&quot;highlighter-rouge&quot;&gt;plugins=(git)&lt;/code&gt; и добавляем туда все нужные нам плагины, учитывая список выше, вышло следующее: &lt;code class=&quot;highlighter-rouge&quot;&gt;plugins=(git npm vagrant composer sudo web-search)&lt;/code&gt;. После изменения данного файла, &lt;strong&gt;всегда&lt;/strong&gt; необходимо прописывать &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt;, иначе изменения вступят в силу только после перезагрузки.&lt;/p&gt;

&lt;h2 id=&quot;Установка-тем-оформления&quot;&gt;Установка тем оформления&lt;/h2&gt;

&lt;p&gt;Из коробки оформление Zsh кому-то может и приглянуться, но мне оно не зашло. Называется она &lt;code class=&quot;highlighter-rouge&quot;&gt;robbyrussell&lt;/code&gt;. Но есть куча других тем, по ссылке &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot;&gt;полный список тем&lt;/a&gt; которые идут в комплекте Oh My Zsh.&lt;/p&gt;

&lt;p&gt;Я покажу как включать темы на примере оформления &lt;strong&gt;agnoster&lt;/strong&gt;, так как оно больше всего мне по душе и иногда также требует дополнительных действий для корректной работы.&lt;/p&gt;

&lt;p&gt;Для включеня данной темы нам опять, достаточно открыть &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt; файли найти строку &lt;code class=&quot;highlighter-rouge&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;&lt;/code&gt; и заменить стандартную тему на нужную, в моем случае &lt;code class=&quot;highlighter-rouge&quot;&gt;agnoster&lt;/code&gt;, итого получается &lt;code class=&quot;highlighter-rouge&quot;&gt;ZSH_THEME=&quot;agnoster&quot;&lt;/code&gt;. Не забываем про &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt;. И всё уже работает!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-03.png&quot;&gt;&lt;img src=&quot;/assets/images/linux/oh-my-zsh/oh-my-zsh-03.png&quot; alt=&quot;Установленая тема: agnoster&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Если у вас вместо иконок Git или нету “уголков” в строке навигации, то вам нужно поставить спец. шрифты с данными иконками. Множество тем требует установки данных шрифтов, они никак не помешают, но будет работать как нужно. Если всё как и на скринах - ставить не нужно, если же нет, то ниже инструкция для вас.&lt;/p&gt;

&lt;p&gt;Давайте установим &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;пропатченные шрифты&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# clone&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/powerline/fonts.git&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# install&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;fonts&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./install.sh&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# clean-up a bit&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; fonts&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Этого уже будет достаточно, можно работать. Но некоторые моменты я ещё затрону.&lt;/p&gt;

&lt;h2 id=&quot;Настройки&quot;&gt;Настройки&lt;/h2&gt;

&lt;p&gt;Я их не правлю, но выписал с обьяснением чтобы было проще ориентироваться. Напоминаю что все они в &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt;. Если настройка закомментирована, то вы можете расскоментировать её удалив &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;, то что указано в значении которое закомментировано - является противоположным значению по умолчанию.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CASE_SENSITIVE=”true”&lt;/strong&gt; — чуствительность к регистру. Как я указал в начале статьи, он сам может исправлять регистр если видит что в текущем ничего не найдено. Если это мешает, установив данный параметр в true, поведение будет привычное bash;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HYPHEN_INSENSITIVE=”true”&lt;/strong&gt; — включает автоматическую замену между “_” и “-“. Аналогично параметру выше, но касается только дефиса и подчеркивания;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DISABLE_AUTO_UPDATE=”true”&lt;/strong&gt; — позволяет отключить автоматическое обновления Oh My Zsh;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;export UPDATE_ZSH_DAYS=13&lt;/strong&gt; — задает переодично проверки обновлений;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DISABLE_LS_COLORS=”true”&lt;/strong&gt; — позволяте отключить цветовую палитру при выводе команды &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DISABLE_AUTO_TITLE=”true”&lt;/strong&gt; — отключение автоматического заголовка терминала;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ENABLE_CORRECTION=”true”&lt;/strong&gt; — включает корректировку команд. Например, вводя &lt;code class=&quot;highlighter-rouge&quot;&gt;compozer&lt;/code&gt; он выдаст запрос: &lt;code class=&quot;highlighter-rouge&quot;&gt;correct 'compozer' to 'composer'?&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;COMPLETION_WAITING_DOTS=”true”&lt;/strong&gt; — включает точки ожидания ввода аргументов. Например введя &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt; и нажав &lt;code class=&quot;highlighter-rouge&quot;&gt;Tab&lt;/code&gt;, он будет перебирать доступные команды (из-за одноименного плагина), а если ввести &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; и нажать таб, у него нет вариантов автодополнения (они будут появляться по мере их успешнного ввода в терминале и кэшироваться) он будет отображать красные точки для обязательного ввода которые можно отменить только &lt;kbd&gt;Ctrl + C&lt;/kbd&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DISABLE_UNTRACKED_FILES_DIRTY=”true”&lt;/strong&gt; — отключает пометку неиспользуемых файлов в пределе Git репозитория как “гразных”, что увеличивает скорость скана для git. Не могу сказать точнее что это и как это работает, но это напрямую связанно с git вообще, а не только плагином;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HIST_STAMPS=”mm/dd/yyyy”&lt;/strong&gt; — позволяет менять формат даты для команды &lt;code class=&quot;highlighter-rouge&quot;&gt;history&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ZSH_CUSTOM=/path/to/new-custom-folder&lt;/strong&gt; — позволяет добавить дополнительный путь до папки где будут храниться кастомные плагины и темы. По дефолту &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.oh-my-zsh/custom&lt;/code&gt;, она также будет функционаривать, т.е. параметр не перезатерающийся.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;Фиксим-проблему-с-path&quot;&gt;Фиксим проблему с PATH&lt;/h2&gt;

&lt;p&gt;В Linux (не знаю как в MacOS), и в текущей версии я такой проблемы не словил, есть или можеть быть проблема что вы вбиваете команду в Zsh, а он говорит её нет. И это нормальное поведение, ведь в момент установки у вас был другой шелл, и возможно путь до бинарника указан в его индивидуальных настройках. Чтобы это исправить, достаточно указать путь до папки с бинарником(ами) в PATH переменную системы. Но bash’овский вариант &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=/usr/local/bin:$PATH&lt;/code&gt; прокатит до перезагрузки.&lt;/p&gt;

&lt;p&gt;Вариант первый, это в файле конфига &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt; раскомментировать соответсвующую строку в самом начале и добавить нужные пути, либо добавить их прямо из терминала:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Добавить в конец переменной&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;path+&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/USERNAME/SOMEPATH/bin'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# Добавить в начало переменной&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/home/USERNAME/SOMEPATH/bin'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# Отгрузить новую переменную&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Удаляем-oh-my-zsh&quot;&gt;Удаляем Oh My Zsh&lt;/h2&gt;

&lt;p&gt;Если вам потребуется полностью удалить Oh My Zsh и сам шелл с системы, то это делается достаточно просто:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Удаляем Oh My Zsh и всё что с ним связано&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;uninstall_oh_my_zsh&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;c&quot;&gt;# Удаляем Zsh&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt uninstall zsh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>niklan.net</name></author><category term="linux" /><summary type="html">Хочу поделиться очень отличным шелом, а по большей части, фреймворком созданным для него, который превратит вашу консоль в очень информативный и продуктивный инструмент.</summary></entry><entry><title type="html">Как ускорить gzip сжатие?</title><link href="https://denisnovikov.github.io/blog/how-to-speed-up-gzip-compression/" rel="alternate" type="text/html" title="Как ускорить gzip сжатие?" /><published>2017-04-25T12:44:27+03:00</published><updated>2017-04-25T12:44:27+03:00</updated><id>https://denisnovikov.github.io/blog/how-to-speed-up-gzip-compression</id><content type="html" xml:base="https://denisnovikov.github.io/blog/how-to-speed-up-gzip-compression/">&lt;p&gt;Когда нужно сжимать большие объемы текста на мощном железе, gzip может работать не так эффективно, как хотелось бы. Gzip работает в 1 поток и эффективно будет использовать только одно ядро.&lt;/p&gt;

&lt;p&gt;Есть несколько альтернативных утилит, которые сжимают файлы используя все ядра. Одна из них — &lt;a href=&quot;http://zlib.net/pigz/&quot;&gt;pigz&lt;/a&gt;. Установить ее можно из пакетов:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install pigz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Для сравнения мы взяли текстовый файл на &lt;code class=&quot;highlighter-rouge&quot;&gt;4.6Гб&lt;/code&gt; и запускали оба архиватора на 8-ядерном сервере:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Обычный gzip&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;gzip test.txt&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;...&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;k&quot;&gt;done in &lt;/span&gt;25.1s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Многопоточный pigz&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;pigz test.txt&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;...&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;k&quot;&gt;done in &lt;/span&gt;7.5s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;pigz отработал &lt;strong&gt;в 4&lt;/strong&gt; раза быстрее&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Есть и &lt;a href=&quot;https://github.com/klauspost/pgzip&quot;&gt;другие инструменты сжатия&lt;/a&gt;, которые используют современные процессоры намного эффективнее стандартного gzip’a.&lt;/p&gt;</content><author><name>ruhighload.com</name></author><category term="linux" /><summary type="html">Когда нужно сжимать большие объемы текста на мощном железе, gzip может работать не так эффективно, как хотелось бы. Gzip работает в 1 поток и эффективно будет использовать только одно ядро.</summary></entry><entry><title type="html">Как обновить крон без запуска текстового редактора</title><link href="https://denisnovikov.github.io/blog/how-to-update-czk-without-starting-a-text-editor/" rel="alternate" type="text/html" title="Как обновить крон без запуска текстового редактора" /><published>2017-04-05T09:47:36+03:00</published><updated>2017-04-05T09:47:36+03:00</updated><id>https://denisnovikov.github.io/blog/how-to-update-czk-without-starting-a-text-editor</id><content type="html" xml:base="https://denisnovikov.github.io/blog/how-to-update-czk-without-starting-a-text-editor/">&lt;p&gt;Всем знают, что можно сделать так:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crontab &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;После выполнения команды запустится любимый nano/vi/mcedit, в котором можно отредактировать расписание, и после закрытия редактора файл расписания будет обновлен.&lt;/p&gt;

&lt;p&gt;Но бывают ситуации, когда расписания нужно обновлять автоматически с помощью скриптов, например, в условиях continuous integration или проектов, в которых расписание задает пользователь.&lt;/p&gt;

&lt;h2 id=&quot;Используем-etccrond&quot;&gt;Используем /etc/cron.d&lt;/h2&gt;

&lt;p&gt;Такие расписания можно раскладывать по файлам, для которых есть специальная папка:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /etc/cron.d&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;php&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;В эту папку можно добавлять свои сценарии, разбивая их для удобства на файлы(файлов может быть много). Единственное, чем отличаются сценарии в файле это тем, что перед командой нужно указать пользователя, от имени которого эта команда будет выполнена, например:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/10 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; www-data /var/www/task/flush_cache.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;С помощью такого подхода расписание кронтаба можно хранить в коде проекта и при деплое обновлять кронтаб автоматически, запустив одну простую команду:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /var/www/my_project/conf/crontab &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /etc/cron.d/my_project&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Важно-помнить&quot;&gt;Важно помнить&lt;/h2&gt;

&lt;p&gt;Не забывайте, что в конце каждого кронтаба должна быть пустая строка, иначе расписание не запустится.&lt;/p&gt;</content><author><name>ruhighload.com</name></author><category term="linux" /><summary type="html">Всем знают, что можно сделать так:</summary></entry><entry><title type="html">Как удалить миллион файлов</title><link href="https://denisnovikov.github.io/blog/how-to-delete-million-of-files/" rel="alternate" type="text/html" title="Как удалить миллион файлов" /><published>2017-03-28T11:40:19+03:00</published><updated>2017-03-28T11:40:19+03:00</updated><id>https://denisnovikov.github.io/blog/how-to-delete-million-of-files</id><content type="html" xml:base="https://denisnovikov.github.io/blog/how-to-delete-million-of-files/">&lt;p&gt;На серверах могут скапливаться горы файлов, которые периодически нужно удалять. Например, логи, скомпилированные версии файлов, или любой другой файловый кеш, генерируемый скриптами.&lt;/p&gt;

&lt;p&gt;Рано или поздно эти горы приходится вычищать:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm /tmp/logs/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Если количество файлов будет критично большим, в какой-то момент вместо удаления файлов мы увидим такое сообщение в консоли:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/bin/rm: Argument list too long.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Что это означает?&lt;/p&gt;

&lt;h2 id=&quot;Проблема&quot;&gt;Проблема&lt;/h2&gt;

&lt;p&gt;Дело в том, что использование маски в командах типа rm/cp/find линукс переводит в удобный для себя формат, делая из понятной человеку команде:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm /tmp/logs/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;список файлов под этой маской:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm /tmp/logs/1.log /tmp/logs/2.log /tmp/logs/3.log ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Проблемы начинаются, когда аргументов у команды rm становится больше допустимого лимита. Проверить этот лимит можно с помощью команды getconf:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;getconf ARG_MAX&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;262144&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;И что все-таки делать?&lt;/p&gt;

&lt;h2 id=&quot;Использовать-цикл-for&quot;&gt;Использовать цикл For&lt;/h2&gt;

&lt;p&gt;Самый простой способ — выполнить нужную нам команду в цикле for, у которого есть два важных преимущества. Во-первых, циклы нересурсоемкие и не имеют лимитов на количество аргументов. Во-вторых, в цикл просто завернуть дополнительную логику, если потребуется делать что-то сложнее, чем удаление файлов.&lt;/p&gt;

&lt;p&gt;Например, вот так можно удалить все файлы одной командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /tmp/logs/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;rm &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Или удалить файлы, которые старше семи дней:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /tmp/logs/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;k&quot;&gt;do&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;  &lt;/span&gt;find &lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-mtime&lt;/span&gt; +7 &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; rm &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Или посчитать, записать в переменную и вывести их количество:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;FILES_COUNT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /tmp/logs/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;c++&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FILES_COUNT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; log files left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Самое-главное&quot;&gt;Самое главное&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;не забывайте чистить логи регулярно, чтобы не засорять файловую систему;&lt;/li&gt;
  &lt;li&gt;используйте для этого готовые инструменты, чтобы не придумывать свои велосипеды;&lt;/li&gt;
  &lt;li&gt;перечитывайте команды перед выполнением, чтобы случайно не удалить всё.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>ruhighload.com</name></author><category term="linux" /><summary type="html">На серверах могут скапливаться горы файлов, которые периодически нужно удалять. Например, логи, скомпилированные версии файлов, или любой другой файловый кеш, генерируемый скриптами.</summary></entry><entry><title type="html">Как установить Linux, Nginx, MySQL, PHP (LEMP) в Ubuntu 16.04</title><link href="https://denisnovikov.github.io/blog/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/" rel="alternate" type="text/html" title="Как установить Linux, Nginx, MySQL, PHP (LEMP) в Ubuntu 16.04" /><published>2017-03-07T21:15:00+03:00</published><updated>2017-03-07T21:15:00+03:00</updated><id>https://denisnovikov.github.io/blog/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru</id><content type="html" xml:base="https://denisnovikov.github.io/blog/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/">&lt;p&gt;Стек LEMP представляет собой набор программного обеспечения, который используется для отображения динамических веб-страниц и веб-приложений. Этот акроним обозначает операционную систему Linux и веб-сервер Nginx. Данные при этом хранятся в базе данных MySQL, а динамическое отображение страниц выполняется средствами PHP.&lt;/p&gt;

&lt;p&gt;В этой статье мы продемонстрируем процесс установки стека LEMP на сервер с Ubuntu 16.04. Операционная система Ubuntu удовлетворяет первому требованию LEMP - это операционная система на базе Linux. Далее мы опишем процесс установки остальных компонентов стека LEMP.&lt;/p&gt;

&lt;h2 id=&quot;Перед-установкой&quot;&gt;Перед установкой&lt;/h2&gt;

&lt;p&gt;Перед тем, как начать следовать описанным в этой статье шагам, убедитесь, что у вас есть обычный не-рутовый (non-root) пользователь с привилегиями &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;. Узнать, как настроить такого пользователя на вашем сервере, можно из &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04&quot;&gt;статьи о первичной настройке сервера на Ubuntu 16.04&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;После того, как вы создали такого пользователя, зайдите на сервер используя его логин и пароль. Теперь вы готовы следовать шагам, описанным в этой статье.&lt;/p&gt;

&lt;h2 id=&quot;Шаг-1---Установка-веб-сервера-nginx&quot;&gt;Шаг 1 - Установка веб-сервера Nginx&lt;/h2&gt;

&lt;p&gt;Для отображения веб-страниц вашего сайта мы будем использовать Nginx - современный и эффективный веб-сервер.&lt;/p&gt;

&lt;p&gt;Всё программное обеспечение, которое мы будем использовать, будет установлено из стандартных репозиториев Ubuntu. Это означает, что мы можем использовать пакетный менеджер &lt;strong&gt;apt&lt;/strong&gt; для установки.&lt;/p&gt;

&lt;p&gt;Поскольку мы собираемся использовать &lt;strong&gt;apt&lt;/strong&gt; в первый раз в ходе этой сессии, начнём с обновления локального списка пакетов. Далее установим сервер:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install nginx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;В Ubuntu 16.04 Nginx настроен для запуска сразу после установки.&lt;/p&gt;

&lt;p&gt;Если вы используете файрвол &lt;code class=&quot;highlighter-rouge&quot;&gt;ufw&lt;/code&gt;, как описано в нашей статье о первичной настройке сервера, вам потребуется разрешить соединения для Nginx. В процессе установки Nginx регистрирует себя в &lt;code class=&quot;highlighter-rouge&quot;&gt;ufw&lt;/code&gt;, поэтому процедура настройки достаточно проста.&lt;/p&gt;

&lt;p&gt;Рекомендуется настраивать &lt;code class=&quot;highlighter-rouge&quot;&gt;ufw&lt;/code&gt; таким образом, чтобы разрешать только тот трафик, который вы хотите разрешить в явном виде. Поскольку мы ещё не настроили SSL для нашего сервера, в этой статье мы разрешим трафик только для порта 80.&lt;/p&gt;

&lt;p&gt;Сделать это можно следующей командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ufw allow &lt;span class=&quot;s1&quot;&gt;'Nginx HTTP'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Вы можете проверить изменения введя команду:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ufw status&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;В результате должен отобразиться вывод следующего вида:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Status: active&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;To                         Action      From&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;                         &lt;span class=&quot;nt&quot;&gt;------&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;OpenSSH                    ALLOW       Anywhere&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Nginx HTTP                 ALLOW       Anywhere&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;OpenSSH &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;               ALLOW       Anywhere &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Nginx HTTP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;            ALLOW       Anywhere &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Теперь, когда мы разрешили трафик на порту 80, вы можете проверить, можно ли осуществить доступ к вашему серверу используя доменное имя или публичный IP адрес сервера в веб-браузере.&lt;/p&gt;

&lt;p&gt;Если у вас нет доменного имени, присвоенного серверу, и вы не знаете публичного IP адреса сервера, вы можете найти этот IP адрес следующей командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ip addr show eth0 | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;inet | awk &lt;span class=&quot;s1&quot;&gt;'{ print $2; }'&lt;/span&gt; | sed &lt;span class=&quot;s1&quot;&gt;'s/\/.*$//'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;В результате будет выведено несколько IP адресов. Попробуйте вставить каждый из них в браузер.&lt;/p&gt;

&lt;p&gt;Другим способом определить свой IP адрес будет проверка, как ваш сервер виден из Интернета:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt; icanhazip.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Наберите полученный IP адрес в вашем веб-браузере. Вы должны увидеть страницу Nginx по умолчанию.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;http://доменное_имя_или_IP_адрес&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/linux/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru-01.png&quot;&gt;&lt;img src=&quot;/assets/images/linux/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru-01.png&quot; alt=&quot;Страница Nginx по умолчанию&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Если вы видите подобную страницу в своём браузере, вы успешно установили Nginx.&lt;/p&gt;

&lt;h2 id=&quot;Шаг-2---Установка-mysql-для-хранения-данных-сайта&quot;&gt;Шаг 2 - Установка MySQL для хранения данных сайта&lt;/h2&gt;

&lt;p&gt;Теперь, когда у нас есть веб-сервер, установим систему управления базами данных MySQL для хранения и управления данным нашего сайта.&lt;/p&gt;

&lt;p&gt;Вы можете легко установить MySQL следующей командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install mysql-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;В процессе установки вам будет предложено ввести рутовый пароль (пароль администратора) для MySQL.&lt;/p&gt;

&lt;p&gt;После завершения установки нам потребуется выполнить некоторые дополнительные команды, чтобы наше окружение MySQL было настроено безопасным образом. Введите следующую команду:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysql_secure_installation&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Скрипт запросит пароль, который вы только что задали для root пользователя в MySQL. Далее вам будет предложено сконфигурировать плагин валидации паролей (&lt;code class=&quot;highlighter-rouge&quot;&gt;VALIDATE PASSWORD PLUGIN&lt;/code&gt;).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Внимание:&lt;/strong&gt; решение включать плагин валидации паролей или нет носит субъективный характер. При включении все пароли,
которые не удовлетворяют определённым критериям безопасности, будут отвергаться MySQL с сообщением об ошибке. Это
может вызывать проблемы, если вы используете “слабые” пароли совместно с программным обеспечением, которое
конфигурирует профили пользователей MySQL, например, пакеты Ubuntu для phpMyAdmin. Вы можете оставить валидацию
паролей отключенной, но в этом случае вам следует всегда использовать “сильные” уникальные пароли для пользователей
базы данных.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Введите &lt;strong&gt;y&lt;/strong&gt; для включения плагина или что-нибудь другое для продолжения без его включения:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;VALIDATE PASSWORD PLUGIN can be used to &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;passwords&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;and improve security. It checks the strength of password&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;and allows the users to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;only those passwords which are&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;secure enough. Would you like to setup VALIDATE PASSWORD plugin?&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No:&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Если вы включили валидацию паролей, вам будет предложено установить уровень надёжности паролей при валидации. Имейте в виду, что при выборе значения &lt;strong&gt;2&lt;/strong&gt; (самый строгий уровень валидации), вы будете получать ошибки при попытке задать пароль без цифр, букв в верхнем и нижнем регистре, а также без специальных символов, а также при попытке использовать пароль, основанный на распространённых словах, которые уязвимы для подбора паролей по словарю.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;There are three levels of password validation policy:&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;LOW    Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;MEDIUM Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8, numeric, mixed &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;, and special characters&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;STRONG Length &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 8, numeric, mixed &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;, special characters and dictionary file&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Please enter 0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; LOW, 1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; MEDIUM and 2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRONG: 1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Если вы включили валидацию паролей, вам будет показан уровень надёжности заданного вами ранее пароля root пользователя, а также вам будет предложено изменить этот пароль. Если вы не хотите менять пароль, введите &lt;strong&gt;n&lt;/strong&gt; или &lt;strong&gt;no&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Using existing password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;root.&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Estimated strength of the password: 100&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;Change the password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;root ? &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Press y|Y &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Yes, any other key &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;No&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : n&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;На все последующие вопросы просто вводите &lt;strong&gt;Y&lt;/strong&gt; и нажимайте клавишу &lt;strong&gt;ENTER&lt;/strong&gt; для выбора настроек по умолчанию. При этом удалятся некоторые тестовые пользователи и базы данных, будет отключена возможность удаленного доступа с учетной записью root-пользователя, и все изменения будут немедленно применены в MySQL.&lt;/p&gt;

&lt;p&gt;Теперь ваша система управления базами данных установлена и мы можем двигаться дальше.&lt;/p&gt;

&lt;h2 id=&quot;Шаг-3---Установка-php&quot;&gt;Шаг 3 - Установка PHP&lt;/h2&gt;

&lt;p&gt;Теперь у нас есть веб-сервер Nginx для отображения нашего сайта, а также MySQL для хранения данных сайта. Нам осталось установить что-то, что позволит генерировать динамический контент для сайта. Для этого мы будем использовать PHP.&lt;/p&gt;

&lt;p&gt;Поскольку Nginx не имеет встроенной поддержки обработки PHP, как некоторые другие веб-серверы, нам необходимо установить &lt;code class=&quot;highlighter-rouge&quot;&gt;php-fpm&lt;/code&gt; (означает “fastCGI process manager”, менеджер процессов fastCGI). Мы настроим Nginx для передачи PHP запросов этому программному обеспечению для обработки.&lt;/p&gt;

&lt;p&gt;Установим этот модуль, а также установим дополнительный пакет, который позволит PHP взаимодействовать с MySQL. В процессе установки будут загружены основные файлы PHP. Сделаем это следующей командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install php-fpm php-mysql&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Настройка-обработчика-php&quot;&gt;Настройка обработчика PHP&lt;/h3&gt;

&lt;p&gt;После установки компонентов PHP настроим их для повышения безопасности нашего веб-сервера.&lt;/p&gt;

&lt;p&gt;Откроем конфигурационный файл &lt;code class=&quot;highlighter-rouge&quot;&gt;php-fpm&lt;/code&gt; с привилегиями root:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/php/7.0/fpm/php.ini&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Найдём в этом файле параметр &lt;code class=&quot;highlighter-rouge&quot;&gt;cgi.fix_pathinfo&lt;/code&gt;. Он будет закомментирован точкой с запятой (;) и будет иметь значение “1” по умолчанию.&lt;/p&gt;

&lt;p&gt;Эти настройки по умолчанию очень небезопасны, потому что благодаря им PHP попытается исполнить ближайший файл, который сможет найти в случае, когда запрашиваемый PHP файл не может быть найден. Это позволит пользователям сформировать PHP запросы таким образом, чтобы запускать скрипты, к которым у них не должно быть доступа.&lt;/p&gt;

&lt;p&gt;Мы можем предотвратить такое поведение раскомментировав эту строку и изменив её значение на “0”:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /etc/php/7.0/fpm/php.ini&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;cgi.fix_pathinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Сохраните и закройте документ после внесения изменений.&lt;/p&gt;

&lt;p&gt;Теперь нам осталось перезапустить обработчик PHP:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart php7.0-fpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;После перезапуска наши настройки вступят в силу.&lt;/p&gt;

&lt;h2 id=&quot;Шаг-4---Настройка-nginx-для-работы-с-обработчиком-php&quot;&gt;Шаг 4 - Настройка Nginx для работы с обработчиком PHP&lt;/h2&gt;

&lt;p&gt;Теперь у нас установлены все необходимые компоненты. Единственное, что нам осталось сделать, это настроить Nginx для использования нашего обработчика PHP для отображения динамического контента.&lt;/p&gt;

&lt;p&gt;Мы сделаем это на уровне серверных блоков (серверные блоки являются приблизительным аналогом виртуальных хостов в Apache). Откроем серверный блок Nginx сервера по умолчанию командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/nginx/sites-available/default&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Этот файл должен иметь примерно следующий вид:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# /etc/nginx/sites-available/default&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[::]:80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/var/www/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.nginx-debian.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;        &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Нам необходимо внести несколько изменений в этот файл для нашего сайта.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Прежде всего, нам необходимо добавить &lt;code class=&quot;highlighter-rouge&quot;&gt;index.php&lt;/code&gt; первым значением директивы &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt;, чтобы веб-сервер в первую очередь искал файлы &lt;code class=&quot;highlighter-rouge&quot;&gt;index.php&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Мы можем изменить директиву &lt;code class=&quot;highlighter-rouge&quot;&gt;server_name&lt;/code&gt; для указания доменного имени сервера или его публичного IP адреса;&lt;/li&gt;
  &lt;li&gt;Для корректной обработки PHP нам необходимо раскомментировать часть файла, которая отвечает за обработку PHP запросов. Это блок &lt;code class=&quot;highlighter-rouge&quot;&gt;location ~\.php$&lt;/code&gt;, кусок кода &lt;code class=&quot;highlighter-rouge&quot;&gt;fastcgi-php.conf&lt;/code&gt; и сокет для работы с &lt;code class=&quot;highlighter-rouge&quot;&gt;php-fpm&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Мы также раскомментируем код, отвечающий за работу с файлами &lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt;. Nginx не обрабатывает эти файлы. Если какие-то из этих файлов окажутся в корневой директории сайта, они не должны быть доступны пользователям.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Изменения, которые необходимо внести в этот файл помечены красным:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# /etc/nginx/sites-available/default&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[::]:80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/var/www/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.php&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.nginx-debian.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;доменное_имя_или_IP_адрес_сервера&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;        &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;\.php$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;        &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;snippets/fastcgi-php&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;        &lt;span class=&quot;kn&quot;&gt;fastcgi_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unix:/run/php/php7.0-fpm.sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\.ht&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;        &lt;span class=&quot;kn&quot;&gt;deny&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;После внесения изменений сохраните и закройте файл.&lt;/p&gt;

&lt;p&gt;Проверьте ваш файл конфигурации на наличие ошибок командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nginx &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Если в результате обнаружены какие-либо ошибки, откройте файл и исправьте их перед тем, как продолжить.&lt;/p&gt;

&lt;p&gt;Когда всё готово, перезапустите Nginx для применения внесённых изменений:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl reload nginx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Шаг-5---Создание-файла-php-для-проверки-настроек&quot;&gt;Шаг 5 - Создание файла PHP для проверки настроек&lt;/h2&gt;

&lt;p&gt;Теперь ваш стек LEMP должен быть полностью готов к работе. Мы можем проверить, что Nginx корректно передаёт &lt;code class=&quot;highlighter-rouge&quot;&gt;.php&lt;/code&gt; файлы нашему обработчику PHP.&lt;/p&gt;

&lt;p&gt;Для этого создадим тестовый PHP файл в корневой директории веб-сервера. Откройте файл с именем &lt;code class=&quot;highlighter-rouge&quot;&gt;info.php&lt;/code&gt; в корневой директории веб-сервера с помощью текстового редактора:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /var/www/html/info.php&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Наберите или введите следующие строки в этот новый файл. Этот код PHP возвращает информацию о нашем сервере:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;    &lt;span class=&quot;c1&quot;&gt;// /var/www/html/info.php&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;phpinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;После внесения изменений сохраните и закройте файл.&lt;/p&gt;

&lt;p&gt;Теперь мы можем проверить, может ли веб-сервер корректно отображать контент, сгенерированный PHP скриптом. Для проверки нам просто нужно открыть данную страницу в веб-браузере. Вам снова потребуется публичный IP-адрес сервера.&lt;/p&gt;

&lt;p&gt;Откроем этот адрес:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;http://домен_или_IP_адрес_сервера/info.php&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Страница, на которую вы попадёте, должна выглядеть похожим образом:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/linux/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru-02.png&quot;&gt;&lt;img src=&quot;/assets/images/linux/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru/linux-nginx-mysql-php-lemp-ubuntu-16-04-ru-02.png&quot; alt=&quot;Тестовая страница PHP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Если вы видите эту страницу, вы успешно настроили обработку PHP с помощью Nginx.&lt;/p&gt;

&lt;p&gt;После того, как мы убедились, что всё работает, удалим этот файл, чтобы не давать неавторизованным пользователям возможности узнать дополнительную информацию о вашем сервере. При необходимости, вы всегда можете создать этот файл заново.&lt;/p&gt;

&lt;p&gt;Удалим файл командой:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rm /var/www/html/info.php&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Заключение&quot;&gt;Заключение&lt;/h2&gt;

&lt;p&gt;Теперь у вас есть полностью настроенный стек LEMP на вашем сервере Ubuntu 16.04. Этот стек представляет собой прочный фундамент дальнейшей работы по предоставлению вашим пользователям веб-контента.&lt;/p&gt;</content><author><name>digitalocean.com</name></author><category term="linux" /><summary type="html">Стек LEMP представляет собой набор программного обеспечения, который используется для отображения динамических веб-страниц и веб-приложений. Этот акроним обозначает операционную систему Linux и веб-сервер Nginx. Данные при этом хранятся в базе данных MySQL, а динамическое отображение страниц выполняется средствами PHP.</summary></entry><entry><title type="html">От вас ничего не зависит, когда вы заказываете разработку интернет-магазина</title><link href="https://denisnovikov.github.io/blog/nothing-depends-on-you-when-you-order-a-design-online-store/" rel="alternate" type="text/html" title="От вас ничего не зависит, когда вы заказываете разработку интернет-магазина" /><published>2017-03-01T21:15:00+03:00</published><updated>2017-03-01T21:15:00+03:00</updated><id>https://denisnovikov.github.io/blog/nothing-depends-on-you-when-you-order-a-design-online-store</id><content type="html" xml:base="https://denisnovikov.github.io/blog/nothing-depends-on-you-when-you-order-a-design-online-store/">&lt;p&gt;Сегодня поделюсь с вами одной мыслью, даже, наверное, секретом, который знают все разработчики сайтов, но никогда не произносят вслух. Знают его все, и крупные студии, работающие с компаниями уровня Газпрома и Сбербанка и мелкие фирмочки, состоящие из одного фрилансера. Секрет очень прост, состоит всего из одного короткого предложения:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;В разработке веб-сайта от клиента ничего не зависит.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Максимум что он может сделать, чтобы улучшить результат — правильно выбрать подрядчика.&lt;/p&gt;

&lt;p&gt;Мысль неприятная, и требуется разъяснить, что это значит. То, какой интернет-магазин будет сделан клиенту (хороший, плохой или «на троечку») от него не зависит, хотя работа им оплачивается. В процессе работы, клиент может утверждать дизайн, вносить правки, предлагать идеи. Но это всё детали, которые на результат слабо влияют. А результат, в данном случае, это не наличие магазина в интернете. Он будет сделан, с этим проблемы обычно нет. Проблема всегда в качестве работы и эффективности сайта.&lt;/p&gt;

&lt;p&gt;Есть выражение «Кто платит тот и заказывает музыку». Есть другое выражение «Кто музыку заказывает тот под нее и танцует». Из двух этих крылатых фраз, популярных на рабочих окраинах любого города, можно сделать вывод, что если уж заказал музыку — придется под нее танцевать, как бы плохо не играли музыканты. Вам будет проще, если у вас плохой слух и вы не чувствуете фальши, главное чтобы бренчали знакомые мотивы. Детали не важны.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;С сайтами точно так же. Один в один. Когда клиент заказал интернет-магазин и оплатил работу, он может только наедятся что &lt;del&gt;музыканты&lt;/del&gt; разработчики, к которым он обратился, знают свое дело.&lt;/strong&gt; Потому что сам он слуха не имеет — не разбирается в веб-разработке. Внешне для клиента все движется вроде бы нормально. Процесс идет, что-то даже уже готово. Бренчат знакомые мотивы. Сайт готов и даже работает в интернете. Вот только ищется плохо, глючит, медленно открывается, посетителей на сайте почти не бывает. Пробовали давать рекламу, но это тоже не помогает, почему-то ничего не заказывают. Приходится работать, как привыкли — без интернет-магазина, но раз уж его заказали и оплатили, пусть висит в интернете с товарами и новостями полугодовой давности. Таких сайтов в интернете миллионы.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Я вам больше скажу, от клиента ничего не зависит не только в веб-сайтах, а почти везде. Например, если вы пришли
лечить зубы — молитесь, чтобы музыкант не фальшивил.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Не будем отвлекаться от веб-разработки. Качество сайта / интернет-магазина, что бы вы ни решили заказать, зависит исключительно от компетенций разработчика. Но заказчику, определить эту компетенцию почти нереально. Более того, заказчику даже после окончания всех работ компетенция разработчика не ясна.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Толи сделали хреново, толи нам не повезло — так примерно думает клиент.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Потому что на словах каждый веб-разработчик Лев Толстой, а на деле далеко не всегда так.&lt;/p&gt;

&lt;p&gt;Кстати, отчасти в этом ответ, почему большие компании работают с дорогими студиями. Не потому что бюджет нужно освоить, просто работа с ними дает больше шансов на хороший результат. Платят не за сайт как таковой, а за то «чтобы все было нормально сделано».&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Но ненужно думать, что делать сайты плохо — это мировой заговор недорогих сайтостроителей. Сайты это не колбаса, в которой количество мяса в прямой зависимости от цены.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Есть люди, которые просто не умеют делать плохо. У них есть знания, «как делать правильно» и заставить себя сделать иначе они не могут, даже если будут работать бесплатно. Есть другие, которым заплатите любые деньги, приставьте пистолет к голове и взведите курок — все равно накосячат. Просто человек не знает «как правильно», у него мало опыта, а иногда еще и совести нет. Поэтому для него фигачить брак — это в порядке вещей.&lt;/p&gt;

&lt;p&gt;Интернет-магазин сложен, прежде всего, второстепенными деталями. Именно их не видит слабый веб-разработчик, а заказчик вообще не подозревает о них. Помните как в фильме 12 стульев, Остап рисовал Сеятелья? Старался. А получилась ерунда. Так же делаются веб-проекты. Только в случае с интернет-магазином, клиент не может отличить халтуру от качественной работы. В музыкантов просьба не стрелять — играют, как умеют.&lt;/p&gt;</content><author><name>webdela.ru</name></author><category term="other" /><summary type="html">Сегодня поделюсь с вами одной мыслью, даже, наверное, секретом, который знают все разработчики сайтов, но никогда не произносят вслух. Знают его все, и крупные студии, работающие с компаниями уровня Газпрома и Сбербанка и мелкие фирмочки, состоящие из одного фрилансера. Секрет очень прост, состоит всего из одного короткого предложения:</summary></entry><entry><title type="html">Отображение ранее введенного пользователя в lightdm</title><link href="https://denisnovikov.github.io/blog/display-previously-entered-user-lightdm/" rel="alternate" type="text/html" title="Отображение ранее введенного пользователя в lightdm" /><published>2017-01-16T00:00:01+03:00</published><updated>2017-01-16T00:00:01+03:00</updated><id>https://denisnovikov.github.io/blog/display-previously-entered-user-lightdm</id><content type="html" xml:base="https://denisnovikov.github.io/blog/display-previously-entered-user-lightdm/">&lt;p&gt;Два месяца назад поставил на виртуалку новое окружение Cinnamon. Посмотреть и понять: стоит ли отказываться от привычного kde. При перезагрузке виртуалки, мне заново приходилось вводить логин. Это сильно мешает тем, что виртуалку переодически перезагружаю.&lt;/p&gt;

&lt;p&gt;Сначала я полез смотреть, что находится в &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/X11/default-display-manager&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/X11/default-display-manager&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;  usr/sbin/lightdm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Из этого делаю вывод, что используется lightdm. Теперь нужно изменить строчку, которая отвечает за показ ранее введенных пользователей. Для начала делаем копию изменяемого файла и открываем файл на редактирование от суперпользователя:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp /etc/lightdm/lightdm.conf /etc/lightdm/lightdm.conf.bak&lt;br data-jekyll-commonmark-ghpages=&quot;&quot; /&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/lightdm/lightdm.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Теперь нужно перейти на 105 строку и раскомментировать строчку:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeter&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;hide&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Досточно убрать символ “#”, сохранить изменения и перезагрузить систему. Удачного использования.&lt;/p&gt;</content><author><name>DNovikov</name></author><category term="linux" /><summary type="html">Два месяца назад поставил на виртуалку новое окружение Cinnamon. Посмотреть и понять: стоит ли отказываться от привычного kde. При перезагрузке виртуалки, мне заново приходилось вводить логин. Это сильно мешает тем, что виртуалку переодически перезагружаю.</summary></entry><entry><title type="html">Почему не стоит слишком доверять кейсам?</title><link href="https://denisnovikov.github.io/blog/why-dont-trust-cases/" rel="alternate" type="text/html" title="Почему не стоит слишком доверять кейсам?" /><published>2016-10-09T21:15:00+03:00</published><updated>2016-10-09T21:15:00+03:00</updated><id>https://denisnovikov.github.io/blog/why-dont-trust-cases</id><content type="html" xml:base="https://denisnovikov.github.io/blog/why-dont-trust-cases/">&lt;p&gt;Вы замечали, что на одну проблему, которая есть у человека, найдется под десяток решений, порой совсем из разных опер? Проще говоря – каждый на рынке продает то, что у него есть, и если то, что у него есть, хоть немного решает вашу проблему, значит это будет позиционироваться как решение вашей проблемы.&lt;/p&gt;

&lt;h2 id=&quot;Каждый-продает-то-что-у-него-есть&quot;&gt;Каждый продает то, что у него есть&lt;/h2&gt;

&lt;p&gt;Незамужней женщине психолог продаст тренинг по выстраиванию отношений, пикапщик консультацию, на которой посоветует чаще бывать на людях, колдунья — амулет и волшебные капли, а сервис знакомств продаст вип-аккаунт. Разумеется, у всех в этом списке есть успешные кейсы. Это их продукт и они продают его всем.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Фейсконтроля в продажах нет. Выписывая счет, никто не сверяет, сколько пунктов в анкете покупателя совпадает с
портретом  идеального клиента, который рисовали маркетологи.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Даже если говорить не про онлайн-сервисы, у которых продажи платных аккаунтов автоматизированы — зашел, выбрал, оплатил, пользуйся (или не пользуйся), а про независимых маркетологов/ рекламщиков, то и здесь будет похожая картина. Какой бы ни был у них в загашнике арсенал инструментов, приемов, сервисов, рекламных площадок, продавать клиенту будут штуки более выгодные для себя. Необязательно выгодные в плане денег, выгода может быть в простоте реализации, интересности или помощи друзьям, у которых ночной клуб и ближайшая вечеринка остается без спонсора.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Реклама интернет-магазина молодежной одежды, путем раздачи флаеров в ночных клубах подвыпившей молодежи? Движуха есть
— эффекта нет, хотя, казалось бы, аудитория целевая, тамада ведущий хороший, конкурсы интересные.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;То же самое с более узкими специалистами. Спросите дизайнера «Как увеличить конверсию в интернет-магазине» и он предложит переделать дизайн: флет, адаптив, больше воздуха —все как полагается. Спросите сеошника, он расскажет про семантическое ядро, релевантность страниц запросам и скорость загрузки сайта.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Если пасечник объявит себя целителем от народной медицины, то будет лечить мёдом все — от простуды до переломов. Просто у него есть мёд и нужно его продавать.&lt;/strong&gt; Кейсы у себя на сайте разместит, понятное дело, только об успешных проектах, а отзывы, в том числе от тех, кому от перелома вроде как не сильно помогло, зато весь курс лечения было вкусно.&lt;/p&gt;

&lt;p&gt;Сервисы, дающие виджеты в аренду, пишут в своих блогах как увеличить конверсию при помощи виджетов (не удивительно? :-). Сервисы онлайн-консультанты, обещают рост продаж, нужно только добавить их код к себе на сайт. То же самое делают CRM, сервисы умных онлайн-рекомендаций и т. д. и т. п. Все вещают с позиции эксперта и с радостью продадут вам свою ерунду, даже если она вам не слишком нужна. &lt;strong&gt;Если всем им верить, то секрет успеха — обвешать сайт виджетами, подключить CRM, запустить рассылку и можно уходить на пенсию.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Предостережение любителям простых решений: если выпить горсть волшебных таблеток, можно загреметь в реальную
больничку :-)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;В свете объявленного по ТВ кризиса, активизировались службы «холодных звонков». Температура этих холодных звонков – абсолютный ноль. Таргетинг такой же, уточнять информацию перед звонком? Не, не слышал. Даже на сайт не зайдут, чтобы, страницу контактов посмотреть. Я так понимаю, там робот по инету ищет контакты, раскладывает по каким-то общим темам, а уже люди звонят и на месте разбираются, кто, что, почему и как. Никого не волнует что вы магазин купальников микро-бикини, вам будут звонить и предлагать расширить ассортимент зимними шапками и перчатками. Я не знаю какая там конверсия именно в продажи, но такой подход порядком раздражжает.&lt;/p&gt;

&lt;p&gt;Если вы придете в SMM агентство чтобы продвигать «грузовики в лизинг», вам с радостью продадут полный спектр услуг. Отказывать не принято. В лучшем случае предупредят, что для сколько-то заметного эффекта нужно платить абонентку минимум 5-6 мес. И повезло, если SMM агентство делает, кроме SMM еще лендинги и контекстную рекламу. А если нет, значит, будет у «грузовиков в лизинг» группа в ВК или ФБ, с шутками про дальнобойщиков, фуры, красивыми девушками рядом с грузовиками и редкими статьями в стиле «продаем дырки, а не сверла» и, конечно, боты в подписчиках.&lt;/p&gt;

&lt;h2 id=&quot;К-чему-я-это-все-рассказывал&quot;&gt;К чему я это все рассказывал&lt;/h2&gt;

&lt;p&gt;Чтобы вы меньше доверяли кейсам и прочим success story :-). Даже если кейс не выдуман от начала до конца, то конкретно ваша польза в нем может сильно преувеличиваться.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Это как с витаминами. То, что они нужны — спора нет, но только их одних недостаточно, чтобы, например, не простывать.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Просто помните, что часть кейсов, которые вы читаете — фейк, ничем не отличаются от баек. Правда в них — это только название сервиса — главного героя. Придумывается клиент, придумывается история и пишется кейс, вот и вся кухня.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;В комментах по такими кейсами хочется дописать: «Все персонажи вымышленные, любые совпадения с реальностью —
случайность».&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;В других кейсах красивые показатели притянуты за уши. Например, клиент год платил абонентскую плату сеошнику и через год трафик с нуля вырос до 250 посетителей в сутки. Скриншоты графиков роста посещаемости из я.метрики, все дела. Но при регулярном пополнении сайта тематическим контентом, в сколько-то популярной нише этот же показатель может быть получен без услуг по продвижению.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Кейсы пишутся с той же целью, с которой крутят по телеку рекламные ролики.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Иногда кейс или хорошую статью просто переводят с английского. У читателя создается ощущение будто компания, на сайте которой он читает текст, имеет какое-то отношение к описанному. Такое, кстати, часто можно встретить в бизнес-литературе, когда автор рассказывает об известных личностях так, как будто они с первого класса вместе, а на самом деле повторяет известные факты, под своим соусом.&lt;/p&gt;

&lt;p&gt;В следующий раз, когда будете читать на сайте очередного интернет-сервиса, SMM-агентства, студии контент-маркетинга или независимого консультанта классные истории о том, как было до и как стало после, не забывайте — все врут!&lt;/p&gt;</content><author><name>webdela.ru</name></author><category term="other" /><summary type="html">Вы замечали, что на одну проблему, которая есть у человека, найдется под десяток решений, порой совсем из разных опер? Проще говоря – каждый на рынке продает то, что у него есть, и если то, что у него есть, хоть немного решает вашу проблему, значит это будет позиционироваться как решение вашей проблемы.</summary></entry></feed>